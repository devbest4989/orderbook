.right_col{:role => "main"}
  .left-sub-sidebar
    = render 'nav_product', add_url: '', active_elem: "sub-nav-product-cat", nav_name: 'Products'
  .right-content
    .col-lg-10.col-sm-10.col-xs-12
      .x_panel{:style => ""}
        .x_title
          %h2
            %i.fa.fa-bars
            Category
          %ul.nav.navbar-right.panel_toolbox
            %li
              %a.collapse-link
                %i.fa.fa-chevron-up
            %li
              %a.close-link
                %i.fa.fa-close
          .clearfix
        .x_content
          #category_container
:javascript
  $(document).ready(function () {
    $('#category_container').jtable({
        title: 'Category List',
        paging: true, //Enable paging
        pageSize: 30, //Set page size (default: 10)
        sorting: true, //Enable sorting
        defaultSorting: 'Name ASC', //Set default sorting
        selecting: true, //Enable selecting
        multiselect: true, //Allow multiple selecting
        selectingCheckboxes: true, //Show checkboxes on first column
        actions: {
            listAction: '#{list_categories_path()}',
            deleteAction: '#{remove_categories_path()}',
            updateAction: '#{change_categories_path()}',
            createAction: '#{append_categories_path()}'
        },
        fields: {
            id: {
                key: true,
                create: false,
                edit: false,
                list: false
            },
            name: {
                title: 'Category Name',
                inputClass: 'form-control input-sm validate[required]'                
            },
            product_count: {
                title: 'Number Of Products',
                create: false,
                edit: false
            },
            actions: {
                title: '',
                sorting: false,
                display: function (data) {
                    return '<a href="/products/all/list_products?category_id='+data.record.id+'">View Products</a>';
                }
            }            
        },
        //Initialize validation logic when a form is created
        formCreated: function (event, data) {
          data.form.validationEngine();
        },
        //Validate form when it is being submitted
        formSubmitting: function (event, data) {
          return data.form.validationEngine('validate');
        },
        //Dispose validation logic when form is closed
        formClosed: function (event, data) {
          data.form.validationEngine('hide');
          data.form.validationEngine('detach');
        }
    });

    //Load student list from server
    $('#category_container').jtable('load');
  });
