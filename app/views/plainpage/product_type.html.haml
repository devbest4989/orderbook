.right_col{:role => "main"}
  %div
    .page-title
      .title_left
        %h3 Product Types
      .title_right
        .col-md-5.col-sm-5.col-xs-12.form-group.pull-right.top_search
          .input-group
            %input.form-control{:placeholder => "Search for...", :type => "text"}/
            %span.input-group-btn
              %button.btn.btn-default{:type => "button"} Go!
    .clearfix
    %div
      .col-lg-4.col-sm-4.col-xs-12
        .x_panel{:style => ""}
          .x_title
            %h2
              %i.fa.fa-bars
              Category
            %ul.nav.navbar-right.panel_toolbox
              %li
                %a.collapse-link
                  %i.fa.fa-chevron-up
              %li
                %a.close-link
                  %i.fa.fa-close
            .clearfix
          .x_content
            #category_container
      .col-lg-4.col-sm-4.col-xs-12
        .x_panel
          .x_title
            %h2
              %i.fa.fa-bars
              Product Line
            %ul.nav.navbar-right.panel_toolbox
              %li
                %a.collapse-link
                  %i.fa.fa-chevron-up
              %li
                %a.close-link
                  %i.fa.fa-close
            .clearfix
          .x_content
            #productline_container
      .col-lg-4.col-sm-4.col-xs-12
        .x_panel
          .x_title
            %h2
              %i.fa.fa-bars
              Brand
            %ul.nav.navbar-right.panel_toolbox
              %li
                %a.collapse-link
                  %i.fa.fa-chevron-up
              %li
                %a.close-link
                  %i.fa.fa-close
            .clearfix
          .x_content
            #brand_container
:javascript
  $(document).ready(function () {
    $('#category_container').jtable({
        title: 'Category List',
        paging: true, //Enable paging
        pageSize: 30, //Set page size (default: 10)
        sorting: true, //Enable sorting
        defaultSorting: 'Name ASC', //Set default sorting
        selecting: true, //Enable selecting
        multiselect: true, //Allow multiple selecting
        selectingCheckboxes: true, //Show checkboxes on first column
        actions: {
            listAction: '#{list_categories_path()}',
            deleteAction: '#{remove_categories_path()}',
            updateAction: '#{change_categories_path()}',
            createAction: '#{append_categories_path()}'
        },
        fields: {
            id: {
                key: true,
                create: false,
                edit: false,
                list: false
            },
            name: {
                title: 'Category Name',
                width: '100%',
                inputClass: 'form-control input-sm validate[required]'                
            }
        },
        //Initialize validation logic when a form is created
        formCreated: function (event, data) {
          data.form.validationEngine();
        },
        //Validate form when it is being submitted
        formSubmitting: function (event, data) {
          return data.form.validationEngine('validate');
        },
        //Dispose validation logic when form is closed
        formClosed: function (event, data) {
          data.form.validationEngine('hide');
          data.form.validationEngine('detach');
        }
    });

    //Load student list from server
    $('#category_container').jtable('load');

    $('#productline_container').jtable({
        title: 'Product Line List',
        paging: true, //Enable paging
        pageSize: 30, //Set page size (default: 10)
        sorting: true, //Enable sorting
        defaultSorting: 'Name ASC', //Set default sorting
        selecting: true, //Enable selecting
        multiselect: true, //Allow multiple selecting
        selectingCheckboxes: true, //Show checkboxes on first column
        actions: {
            listAction: '#{list_product_lines_path()}',
            deleteAction: '#{remove_product_lines_path()}',
            updateAction: '#{change_product_lines_path()}',
            createAction: '#{append_product_lines_path()}'
        },
        fields: {
            id: {
                key: true,
                create: false,
                edit: false,
                list: false
            },
            name: {
                title: 'Product Line Name',
                width: '100%',
                inputClass: 'form-control input-sm validate[required]'                
            }
        },
        //Initialize validation logic when a form is created
        formCreated: function (event, data) {
          data.form.validationEngine();
        },
        //Validate form when it is being submitted
        formSubmitting: function (event, data) {
          return data.form.validationEngine('validate');
        },
        //Dispose validation logic when form is closed
        formClosed: function (event, data) {
          data.form.validationEngine('hide');
          data.form.validationEngine('detach');
        }
    });

    //Load student list from server
    $('#productline_container').jtable('load');

    $('#brand_container').jtable({
        title: 'Brand List',
        paging: true, //Enable paging
        pageSize: 30, //Set page size (default: 10)
        sorting: true, //Enable sorting
        defaultSorting: 'Name ASC', //Set default sorting
        selecting: true, //Enable selecting
        multiselect: true, //Allow multiple selecting
        selectingCheckboxes: true, //Show checkboxes on first column
        actions: {
            listAction: '#{list_brands_path()}',
            deleteAction: '#{remove_brands_path()}',
            updateAction: '#{change_brands_path()}',
            createAction: '#{append_brands_path()}'
        },
        fields: {
            id: {
                key: true,
                create: false,
                edit: false,
                list: false
            },
            name: {
                title: 'Brand Name',
                width: '100%',
                inputClass: 'form-control input-sm validate[required]'                
            }
        },
        //Initialize validation logic when a form is created
        formCreated: function (event, data) {
          data.form.validationEngine();
        },
        //Validate form when it is being submitted
        formSubmitting: function (event, data) {
          return data.form.validationEngine('validate');
        },
        //Dispose validation logic when form is closed
        formClosed: function (event, data) {
          data.form.validationEngine('hide');
          data.form.validationEngine('detach');
        }
    });

    //Load student list from server
    $('#brand_container').jtable('load');
  });
